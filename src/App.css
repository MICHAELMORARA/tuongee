.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}
/* src/App.css */
.custom-image {
  object-position: top center; /* Ensures the head is more centered and visible */
}
/* Specify Roboto as the default font family */
.roboto-thin {
  font-family: "--thm-font", sans-serif;
  font-style: normal;
}


.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.fade-in-down {
  animation: fadeInDown 6s ease-in-out forwards;
}

.fade-in-down:nth-child(1) {
  animation-delay: 0.2s;
}

.fade-in-down:nth-child(2) {
  animation-delay: 0.4s;
}

.fade-in-down:nth-child(3) {
  animation-delay: 0.6s;
}

.fade-in-down:nth-child(4) {
  animation-delay: 2s;
}

.fade-in-down:nth-child(5) {
  animation-delay: 2s;
}

.fade-in-down:nth-child(6) {
  animation-delay: 3s;
}

.button-hover-effect {
  position: relative;
  overflow: hidden;
  color: #ffffff;
  font-size: 14px;
  font-weight: 400;
  font-family: var(--thm-font);
}

.button-hover-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color:green;
  transform: translateX(-100%);
  transition: transform 1s ease; /* Updated to 4 seconds */
  z-index: 0;
}

.button-hover-effect:hover::before {
  transform: translateX(0);
}

.button-hover-effect span {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
}

.button-hover-effect span svg {
  margin-left: 0.5rem;
  transition: transform 4s ease; /* Updated to 4 seconds */
}

.button-hover-effect:hover span svg {
  transform: translateX(5px);
}
/* In your app.css file */
body {
  font-family: var(--thm-font), -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

/* Add additional styling for other elements if needed */

/* src/styles.css */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

:root {
  --thm-font-2: 'Roboto'; /* Example of setting the variable to Roboto */
}

/* src/styles.css */
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.z-0 {
  z-index: 0;
}

.z-10 {
  z-index: 10;
}

.h-screen {
  height: 100vh;
}

.w-screen {
  width: 100vw;
}

/* Add any additional styles needed */

@keyframes riseUp {
  from {
    transform: translate(-50%, 50%);
    opacity: 0;
  }
  to {
    transform: translate(-50%, -50%);
    opacity: 1;
  }
}

.rise-up {
  animation: riseUp 1s ease-out;
}

.testimonial-card {
  position: relative;
  padding-bottom: 1rem; /* Add padding to the bottom */
  transition: background-color 0.5s ease, border-bottom-color 0.5s ease; /* Smooth transition for background color and border color */
  border-bottom: 2px solid transparent; /* Default border color */
}

.testimonial-card:hover {
  background-color: #374151; /* Slate-700 background color on hover */
  border-bottom-color: red; /* Red border color on hover */
}

.testimonial-card:hover h2,
.testimonial-card:hover p,
.testimonial-card:hover h3 {
  color: white; /* White text color on hover */
}

.testimonial-card img {
  transition: transform 0.5s ease; /* Smooth transition for image transform */
  transform-origin: center; /* Set the transform origin to the center */
}

.testimonial-card:hover img {
  transform: scale(1.05); /* Slightly enlarge the image on hover */
}

.mission-section img,
.vision-section img,
.core-values-section img,
.purpose-section img {
  display: block;
  margin: 0 auto;
  padding: 30px; /* Set the padding to match that of the core values */
  border-radius: 100px; /* Add rounded corners */
  transition: padding 0.3s ease; /* Smooth transition for padding */
}

.mission-section img:hover,
.vision-section img:hover,
.core-values-section img:hover,
.purpose-section img:hover {
  padding: 20px; /* Increase padding on hover */
  box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2); /* Add a deeper shadow on hover */
}

.mission-section,
.vision-section,
.core-values-section,
.purpose-section {
  text-align: center;
}

.mission-section h2,
.vision-section h2,
.core-values-section h2,
.purpose-section h2 {
  font-weight: bold;
}

.image-container {
  padding: 5px;
  background-color: white;
  border-radius: 100%;
  position: relative;
  display: inline-block;
}

.image-container img {
  border-radius: 20px;
}

.image-container::before {
  content: '';
  position: absolute;
  top: 20px; /* Adjust the top position as needed */
  right: 20px; /* Adjust the right position as needed */
  width: 16px; /* Increase the size for better visibility */
  height: 16px;
  background-color: red;
  border-radius: 50%;
  transform: translate(50%, -50%);
  z-index: 1;
}


.image-container:hover::before {
  background-color: darkred;
}

/* In App.css or the relevant CSS file */
@import "~slick-carousel/slick/slick.css";
@import "~slick-carousel/slick/slick-theme.css";



/* App.css */
.object-cover {
  object-fit: cover;
}

.object-contain {
  object-fit: contain;
}

/* In your CSS file, e.g., App.css */
.slider-container {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
}

.slider-image {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensures the image covers the container without stretching */
  object-position: center; /* Centers the image */
}

.spinner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
}

.spinner {
  border: 4px solid #ffffff; /* Set all borders to white */
  border-radius: 50%;
  border-top: 4px solid #ffffff; /* Ensure top border is also white */
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.testimonial-cardone {
  position: relative;
  padding-bottom: 1rem; /* Add padding to the bottom */
  transition: background-color 0.5s ease, border-bottom-color 0.5s ease; /* Smooth transition for background color and border color */
  border-bottom: 2px solid transparent; /* Default border color */
}

.testimonial-cardone:hover {
  background-color:black; /* Slate-700 background color on hover */
  border-bottom-color: red; /* Red border color on hover */
  color: white; /* Text color on hover */
}


.testimonial-cardone:hover p,
.testimonial-cardone:hover span,
.testimonial-cardone:hover label,
.testimonial-cardone:hover a,
.testimonial-cardone:hover input,
.testimonial-cardone:hover textarea {
  color: black; /* Ensure all text elements have white color on hover */
}



.testimonial-cardone img {
  transition: transform 0.5s ease; /* Smooth transition for image transform */
  transform-origin: center; /* Set the transform origin to the center */
}

.testimonial-cardone:hover img {
  transform: scale(1.05); /* Slightly enlarge the image on hover */
}






/* @import "slick-carousel/slick/slick.css"; 
@import "slick-carousel/slick/slick-theme.css";
@import Slider from "react-slick"; */

/* Add these styles to your CSS file */

.modal {
  position: absolute;
  top: 50%;
  left: 50%;
  right: auto;
  bottom: auto;
  transform: translate(-50%, -50%);
  background: white;
  padding: 20px;
  max-width: 600px;
  width: 90%;
  border-radius: 10px;
  outline: none;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  z-index: 1000;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  font-size: 20px;
  cursor: pointer;
}

.modal-content {
  position: relative;
}


